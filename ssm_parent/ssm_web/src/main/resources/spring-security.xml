<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:security="http://www.springframework.org/schema/security"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">

	<!--开启jsr-250的注解支持-->
	<security:global-method-security jsr250-annotations="enabled" pre-post-annotations="enabled"></security:global-method-security>
	<!--<security:global-method-security secured-annotations="enabled"></security:global-method-security>-->
	<!-- 配置不拦截的资源 -->
	<security:http pattern="/login.jsp" security="none"/>
	<security:http pattern="/failer.jsp" security="none"/>
	<security:http pattern="/css/**" security="none"/>
	<security:http pattern="/img/**" security="none"/>
	<security:http pattern="/plugins/**" security="none"/>

	<!--
        配置具体的规则
        auto-config="true"	不用自己编写登录的页面，框架提供默认登录页面
        use-expressions="false"	是否使用SPEL表达式（没学习过）
    -->
	<!--不指定页面的话,使用spring security中默认提供的登录页面-->
	<security:http auto-config="true" use-expressions="false">
		<!-- 配置具体的拦截的规则 pattern="请求路径的规则" access="访问系统的人，必须有ROLE_USER的角色" -->
		<security:intercept-url pattern="/**" access="ROLE_USER,ROLE_ADMIN"/>

		<!-- 定义跳转的具体的页面 -->
		<!--第二个属性,登录页面表单提交的路径,默认就是/login-->
		<security:form-login
				login-page="/login.jsp"
				login-processing-url="/login"
				default-target-url="/index.jsp"
				authentication-failure-url="/failer.jsp"
		/>

		<!-- 关闭跨域请求 -->
		<security:csrf disabled="true"/>

		<!-- 访问指定路径,用户退出,并跳转到指定页面 -->
		<security:logout invalidate-session="true" logout-url="/logout" logout-success-url="/login.jsp" />

	</security:http>

	<!-- 切换成数据库中的用户名和密码 -->
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="userService">
			<!-- 配置加密的方式 -->
			<security:password-encoder ref="passwordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager>

	<!-- 配置加密类 -->
	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	<!--支持spel表达式-->
	<bean id="expressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"></bean>
	<!-- 提供了入门的方式，在内存中存入用户名和密码
    <security:authentication-manager>
        <security:authentication-provider>
            <security:user-service>
                <security:user name="admin" password="{noop}admin" authorities="ROLE_USER"/>
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>
    -->

</beans>












